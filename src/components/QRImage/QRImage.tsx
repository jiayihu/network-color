import { doc, onSnapshot, updateDoc } from 'firebase/firestore';
import { useEffect, useState } from 'react';
import { getDb } from '../../db';
import { zip } from '../../helpers';
import { Packets } from '../Packets/Packets';
// import { PixelCanvas } from '../PixelCanvas/PixelCanvas';
import { QRPixels } from '../QRPixels';
import { bitmap } from './qr';
// import qrImg from './qr.png';
import { QRForm } from './QRForm';

const packets = [
  '88e9fe877f08101331b7943a080045000060000040005711ec5dd83ace2ec0a8017e0f260dc8002439881411111000101101111000100010001001',
  '88e9fe877f08101331b7943a080045000045000040004211ec5dd83ace2ec0a8017e0e440c77002439880b10011000010110100010110010111000',
  '88e9fe877f08101331b7943a080045000057000040005311ec5dd83ace2ec0a8017e0c570f24002439881a10000010001010111110110100011111',
  '88e9fe877f08101331b7943a080045000054000040004811ec5dd83ace2ec0a8017e0c950d49002439880a01111111100011010011111111001011',
  '88e9fe877f08101331b7943a080045000036000040003111ec5dd83ace2ec0a8017e0e260d67002439880210111010011111001111011001011101',
  '88e9fe877f08101331b7943a080045000031000040003611ec5dd83ace2ec0a8017e0d690f9b002439881f11111110000000100010100000110000',
  '88e9fe877f08101331b7943a080045000033000040003411ec5dd83ace2ec0a8017e0e801041002439880f10001001001000010011111000011100',
  '88e9fe877f08101331b7943a080045000041000040003911ec5dd83ace2ec0a8017e0c210dd6002439881b10111010010111010011001111110110',
  '88e9fe877f08101331b7943a080045000038000040006011ec5dd83ace2ec0a8017e0de10ea9002439880e11010111100101000111100000001100',
  '88e9fe877f08101331b7943a080045000042000040003511ec5dd83ace2ec0a8017e0bf80ee6002439880110000010001001100011101001000001',
  '88e9fe877f08101331b7943a080045000043000040004311ec5dd83ace2ec0a8017e0eca0cba002439881001010000111100011101011001010111',
  '88e9fe877f08101331b7943a080045000048000040003411ec5dd83ace2ec0a8017e0e4c0d6c002439881710010010001110010011111111111011',
  '88e9fe877f08101331b7943a080045000033000040003311ec5dd83ace2ec0a8017e0fb50ed9002439881e10000010011111011000011111001001',
  '88e9fe877f08101331b7943a080045000036000040004811ec5dd83ace2ec0a8017e0bf10d38002439880011111110011010000100101101111111',
  '88e9fe877f08101331b7943a080045000048000040003011ec5dd83ace2ec0a8017e0c840f07002439881300111011011111011100110010101111',
  '88e9fe877f08101331b7943a080045000036000040005711ec5dd83ace2ec0a8017e10360c62002439880410111010111001011001001001011101',
  '88e9fe877f08101331b7943a080045000059000040004911ec5dd83ace2ec0a8017e0c050dcb002439880310111010000000101011011001011101',
  '88e9fe877f08101331b7943a080045000060000040003711ec5dd83ace2ec0a8017e0fbd0e95002439881c10111010101000000010101100100000',
  '88e9fe877f08101331b7943a080045000038000040003711ec5dd83ace2ec0a8017e0dc70bee002439881111100010010001000011110000010110',
  '88e9fe877f08101331b7943a080045000056000040003211ec5dd83ace2ec0a8017e0eed0df1002439880c10001010011000001101111110101101',
  '88e9fe877f08101331b7943a080045000046000040005011ec5dd83ace2ec0a8017e0d651025002439881911111110111111001101011101011000',
  '88e9fe877f08101331b7943a080045000053000040003611ec5dd83ace2ec0a8017e0d770e21002439880d10000001011111001110100110111000',
  '88e9fe877f08101331b7943a080045000052000040004311ec5dd83ace2ec0a8017e0bf40cbc002439881500100111010001101111110001100111',
  '88e9fe877f08101331b7943a080045000040000040003111ec5dd83ace2ec0a8017e0dc00fbd002439880510000010000110100011100101000001',
  '88e9fe877f08101331b7943a080045000030000040003011ec5dd83ace2ec0a8017e0f300e93002439880700000000111000100101011000000000',
  '88e9fe877f08101331b7943a080045000053000040006011ec5dd83ace2ec0a8017e0ec00cf2002439881211011101010001111101010011100001',
  '88e9fe877f08101331b7943a080045000046000040003511ec5dd83ace2ec0a8017e0d670c75002439880800110011110111110010100111010000',
  '88e9fe877f08101331b7943a080045000034000040005011ec5dd83ace2ec0a8017e0c500c5b002439881d10111010111100000010001111001100',
  '88e9fe877f08101331b7943a080045000054000040003911ec5dd83ace2ec0a8017e101e104e002439880900100100011111110100000011001101',
  '88e9fe877f08101331b7943a080045000048000040004711ec5dd83ace2ec0a8017e0c091048002439881601101000110011100010001110111001',
  '88e9fe877f08101331b7943a080045000044000040004211ec5dd83ace2ec0a8017e0e940e27002439881800000000111000001001010100011010',
  '88e9fe877f08101331b7943a080045000041000040004311ec5dd83ace2ec0a8017e0f680d18002439880611111110101010100101010101111111',
];

const qrBitmap = bitmap.flat();

// console.log(bitmap.map((row) => row.map((pixel) => (pixel === '#000000' ? '1' : '0')).join('')));

export function QRImage() {
  const [activeRows, setActiveRows] = useState<boolean[]>(new Array(32).fill(false));

  useEffect(() => {
    const unsubscribe = onSnapshot(doc(getDb(), 'images', 'qr'), (doc) => {
      const activeColors = (doc.data() as any).activeRows || [];
      setActiveRows(activeColors);
    });

    return unsubscribe;
  }, []);

  const handleSubmit = (row: number, bitRow: boolean[]) => {
    const correctBitRow = bitmap[row].map((pixel) => (pixel === '#000000' ? true : false));
    const isCorrect = zip(correctBitRow, bitRow).every(([x, y]) => x === y);

    if (isCorrect) {
      const updatedActiveRows = activeRows.map((x, i) => (i === row ? true : x));
      updateDoc(doc(getDb(), 'images', 'qr'), {
        activeRows: updatedActiveRows,
      });
    } else {
      alert(`I bit per la riga ${row} non sono corretti`);
    }
  };

  const handleReset = () => {
    const activeRows = new Array(32).fill(false);
    activeRows[3] = true;
    activeRows[10] = true;
    activeRows[20] = true;
    activeRows[31] = true;

    updateDoc(doc(getDb(), 'images', 'qr'), {
      activeRows,
    });
  };

  return (
    <div>
      <div className="row">
        <div className="col-md-4 d-flex justify-content-center mb-5">
          {/* <PixelCanvas
            imgSrc={qrImg}
            width={128}
            height={128}
            palette={['#000', '#fff']}
            activeColors={['#000', '#fff']}
            hideOriginal
          /> */}
          <QRPixels pixels={qrBitmap} width={32} height={32} activeRows={activeRows} />
        </div>
        <div className="col-md-8">
          <Packets packets={packets} skipLast={32} />
          <hr className="my-3"></hr>
          <QRForm onSubmit={handleSubmit} />
        </div>
      </div>
      <div className="mt-5 border-top pt-3">
        <button type="button" className="btn" onClick={handleReset}>
          Reset del gioco per tutti
        </button>
      </div>
    </div>
  );
}
